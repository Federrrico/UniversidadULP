/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadejemplo.Vistas;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadejemplo.AccesoADatos.*;
import universidadejemplo.Entidades.Alumno;
import universidadejemplo.Entidades.Inscripcion;
import universidadejemplo.Entidades.Materia;

/**
 *
 * @author Editor
 */
public class FormularioInscripcion extends javax.swing.JInternalFrame {
    
    private DefaultTableModel modelo = new DefaultTableModel();
    
    /**
     * Creates new form FormularioInscripcion
     */
    public FormularioInscripcion() {
        initComponents();
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("AÑO");
        jTMaterias.setModel(modelo);
        jBInscribir.setEnabled(false);
        jBAnularInscripcion.setEnabled(false);
    }
    
    
    private void borrarFilas(){
        int f = modelo.getRowCount() - 1;
        for (;f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCBAlumno = new javax.swing.JComboBox<>();
        jRBMateriasInscriptas = new javax.swing.JRadioButton();
        jRBMateriaNoInscripta = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTMaterias = new javax.swing.JTable();
        jBInscribir = new javax.swing.JButton();
        jBAnularInscripcion = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(470, 525));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Seleccione un alumno:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 194, -1, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Listado de Materias");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, -1, -1));

        jCBAlumno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBAlumnoItemStateChanged(evt);
            }
        });
        jCBAlumno.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jCBAlumnoPopupMenuWillBecomeVisible(evt);
            }
        });
        getContentPane().add(jCBAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 300, -1));

        jRBMateriasInscriptas.setText("Materias Inscriptas");
        jRBMateriasInscriptas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBMateriasInscriptasMouseClicked(evt);
            }
        });
        getContentPane().add(jRBMateriasInscriptas, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, -1, -1));

        jRBMateriaNoInscripta.setText("Materias No Inscriptas");
        jRBMateriaNoInscripta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBMateriaNoInscriptaActionPerformed(evt);
            }
        });
        getContentPane().add(jRBMateriaNoInscripta, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, -1, -1));

        jTMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTMaterias);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 392, 120));

        jBInscribir.setText("Inscribir");
        jBInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInscribirActionPerformed(evt);
            }
        });
        getContentPane().add(jBInscribir, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, -1, 30));

        jBAnularInscripcion.setText("Anular inscripcion");
        jBAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnularInscripcionActionPerformed(evt);
            }
        });
        getContentPane().add(jBAnularInscripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, -1, 30));

        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jBSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 440, -1, 30));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("INSCRIPCIONES");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/universidadejemplo/Recursos/alumnos.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 255, 170));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/universidadejemplo/Recursos/logo.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 0, 190, 170));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBAlumnoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBAlumnoPopupMenuWillBecomeVisible
        AlumnoData a1 = new AlumnoData();
        jCBAlumno.removeAllItems();
        jCBAlumno.addItem(null);
        try {
            for (Alumno alumno : a1.listarAlumnos()) {
                jCBAlumno.addItem(alumno);
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No hay alumnos cargados en la base de datos");
        }
    }//GEN-LAST:event_jCBAlumnoPopupMenuWillBecomeVisible

    private void jRBMateriaNoInscriptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBMateriaNoInscriptaActionPerformed
        borrarFilas();
        jRBMateriasInscriptas.setSelected(false);        
        jBInscribir.setEnabled(true);
        jBAnularInscripcion.setEnabled(false);
        jRBMateriaNoInscripta.setSelected(true);
        InscripcionData ida = new InscripcionData();
        try {
            Alumno al1 = (Alumno) jCBAlumno.getSelectedItem();            
            for (Materia materia : ida.obtenerMateriasNoCursadas(al1.getIdAlumno())) {
                modelo.addRow(new Object[]{materia.getIdMateria(), materia.getNombre(), materia.getAño()});
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Seleccione un alumno para obtener las materias");
        }
    }//GEN-LAST:event_jRBMateriaNoInscriptaActionPerformed

    private void jRBMateriasInscriptasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBMateriasInscriptasMouseClicked
        borrarFilas();    
        jBInscribir.setEnabled(false);
        jBAnularInscripcion.setEnabled(true);
        jRBMateriaNoInscripta.setSelected(false);
        InscripcionData ida = new InscripcionData();
        try {
            Alumno al1 = (Alumno) jCBAlumno.getSelectedItem();
            for (Materia materia : ida.obtenerMateriasCursadas(al1.getIdAlumno())) {
                modelo.addRow(new Object[]{materia.getIdMateria(), materia.getNombre(), materia.getAño()});
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Seleccione un alumno para obtener las materias");
        }
    }//GEN-LAST:event_jRBMateriasInscriptasMouseClicked

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInscribirActionPerformed
        MateriaData matD = new MateriaData();
        Alumno alu = (Alumno) jCBAlumno.getSelectedItem();
        InscripcionData insData = new InscripcionData();
        try {
            int matId = Integer.parseInt(modelo.getValueAt(jTMaterias.getSelectedRow(), 0).toString());
            insData.guardarInscripcion(new Inscripcion(alu, matD.buscarMateria(matId), 0D));
            modelo.removeRow(jTMaterias.getSelectedRow());
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion para realizar la inscripcion");
        }
    }//GEN-LAST:event_jBInscribirActionPerformed

    private void jBAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnularInscripcionActionPerformed
        InscripcionData insData = new InscripcionData();
        try {
            int matId = Integer.parseInt(modelo.getValueAt(jTMaterias.getSelectedRow(), 0).toString());
            Alumno alu = (Alumno) jCBAlumno.getSelectedItem();
            int aluId = alu.getIdAlumno();
            insData.borrarInscripcion(aluId, matId);
            modelo.removeRow(jTMaterias.getSelectedRow());
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion para eliminar la inscripcion");
        }
    }//GEN-LAST:event_jBAnularInscripcionActionPerformed

    private void jCBAlumnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBAlumnoItemStateChanged
        if (jRBMateriasInscriptas.isSelected()) {
            borrarFilas();
            jBInscribir.setEnabled(false);
            jBAnularInscripcion.setEnabled(true);
            jRBMateriaNoInscripta.setSelected(false);
            InscripcionData ida = new InscripcionData();
            try {
                Alumno al1 = (Alumno) jCBAlumno.getSelectedItem();
                for (Materia materia : ida.obtenerMateriasCursadas(al1.getIdAlumno())) {
                    modelo.addRow(new Object[]{materia.getIdMateria(), materia.getNombre(), materia.getAño()});
                }
            } catch (NullPointerException ex) {}
        } else if (jRBMateriaNoInscripta.isSelected()) {
            borrarFilas();
            jRBMateriasInscriptas.setSelected(false);
            jBInscribir.setEnabled(true);
            jBAnularInscripcion.setEnabled(false);
            jRBMateriaNoInscripta.setSelected(true);
            InscripcionData ida = new InscripcionData();
            try {
                Alumno al1 = (Alumno) jCBAlumno.getSelectedItem();
                for (Materia materia : ida.obtenerMateriasNoCursadas(al1.getIdAlumno())) {
                    modelo.addRow(new Object[]{materia.getIdMateria(), materia.getNombre(), materia.getAño()});
                }
            } catch (NullPointerException ex) {}
        } else {
            borrarFilas();
        }
    }//GEN-LAST:event_jCBAlumnoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAnularInscripcion;
    private javax.swing.JButton jBInscribir;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Alumno> jCBAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRBMateriaNoInscripta;
    private javax.swing.JRadioButton jRBMateriasInscriptas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTMaterias;
    // End of variables declaration//GEN-END:variables
}
